# bump: man-db-version /MAN_DB_VERSION="(.*)"/ https://gitlab.com/man-db/man-db.git|semver:*
MAN_DB_VERSION="2.12.1"

export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_DEV_URL="https://gitlab.com/cjwatson/man-db.git"
export ZOPEN_DEV_DEPS="git make xz gzip tar pkgconfig flex libtool autoconf automake gettext m4 perl zoslib wget coreutils libiconv libgdbm ncurses groff less sed grep diffutils libpipeline"

export ZOPEN_STABLE_URL="https://download.savannah.nongnu.org/releases/man-db/man-db-${MAN_DB_VERSION}.tar.xz"
export ZOPEN_STABLE_DEPS="curl make xz gzip libtool autoconf automake gettext m4 perl zoslib wget coreutils libiconv libgdbm ncurses libpipeline groff less sed grep diffutils"
export ZOPEN_EXTRA_CONFIGURE_OPTS='--disable-cache-owner'
export LESSCHARSET=utf-8
export ZOPEN_RUNTIME_DEPS="groff libiconv less ncurses"
export ZOPEN_COMP="CLANG"
export ZOPEN_CHECK_OPTS="-i check"

rm -f patches
if [ "${ZOPEN_BUILD_LINE}x" = "STABLEx" ]; then
  ln -s tarball-patches patches
  export ZOPEN_BOOTSTRAP=skip
  export libpipeline_CFLAGS="\${CFLAGS}"
  export libpipeline_CPPFLAGS="\${CPPFLAGS}"
  export libpipeline_LIBS="-lpipeline"
else
  ln -s git-patches patches
  export ZOPEN_EXTRA_LDFLAGS='-Wl,map'
  export libpipeline_CFLAGS="\${CFLAGS}"
  export libpipeline_CPPFLAGS="\${CPPFLAGS}"
  export libpipeline_LIBS="-lpipeline"
fi

zopen_pre_check() {
  # z/OS Open Tools MANPATH can cause "cannot execute: EDC5126I Filename too long." in libtool
  unset MANPATH
}

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  # We only care about the summary as man's test results display FAILS duplicate times in the same format
  failures=$(grep -A 10 "Testsuite summary for man-db"  ${chk} | grep -E '^# FAIL:|^# ERROR:|^# XFAIL' | awk '{sum+=$3;} END{print sum;}')
  totalTests=$(grep -A 10 "Testsuite summary for man-db"  ${chk} | grep -E '^# ERROR:|^# PASS:|^# XFAIL:|^# FAIL:|^# XPASS:' | awk '{sum+=$3;} END{print sum;}')

  cat <<ZZ
  actualFailures:$failures
  totalTests:$totalTests
  expectedFailures:12
ZZ
}

zopen_append_to_zoslib_env() {
cat <<EOF
MAN_TEST_DISABLE_SYSTEM_CONFIG|set|1
ASCII_TERMINFO|set|PROJECT_ROOT/../../ncurses/ncurses/share/terminfo/
EOF
}

zopen_get_version() {
  ./src/man --version | awk ' { print $2; } '
}

zopen_post_install()
{
  mv $ZOPEN_INSTALL_DIR/bin/man $ZOPEN_INSTALL_DIR/bin/zotman
  mkdir $ZOPEN_INSTALL_DIR/altbin
  ln -s ../bin/zotman $ZOPEN_INSTALL_DIR/altbin/man

  mkdir -p $ZOPEN_INSTALL_DIR/share/altman/man1
  mv $ZOPEN_INSTALL_DIR/share/man/man1/man.1 $ZOPEN_INSTALL_DIR/share/man/man1/zotman.1
  ln -s ../../man/man1/zotman.1 $ZOPEN_INSTALL_DIR/share/altman/man1/man.1
}

zopen_install_caveats()
{
cat <<ZZ
Man-db has been installed as zotman under the bin/ dir to avoid collision with z/OS /bin/man.
The conflicting manpages have been installed under the share/altman dir. You can use zotman to view
the manpages as such: zotman zotman
If you prefer to use Man-db as man, source zopen-config with the option --override-zos-tools.
ZZ
}
